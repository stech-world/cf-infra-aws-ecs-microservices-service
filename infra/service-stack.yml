AWSTemplateFormatVersion: '2010-09-09'
Description: container on ecs cluster

Parameters:
  ClusterStackName:
    Type: String
    Default: app-cluster
  VPCStackName:
    Type: String
  ServiceName:
    Type: String
  Priority:
    Type: Number


Resources:
  
  Task:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: stw-aws-ecs-microservices
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: 
        Fn::ImportValue:
          !Sub "${ClusterStackName}-ECSTaskExecutionRole"   
      ContainerDefinitions:
        - Name: !Sub ${ServiceName}-service
          Image: !Sub 248581660709.dkr.ecr.eu-west-1.amazonaws.com/stw-aws-ecs-microservices-${ServiceName}-service:v1
          Cpu: 256
          Memory: 512
          PortMappings:
            - ContainerPort: 4567
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: 'stw-aws-ecs-microservices-lg'
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: !Sub ${ServiceName}-service
          Environment: 
            - Name: LOADBALANCER_URL
              Value: 
                Fn::ImportValue:
                  !Sub "${ClusterStackName}-LoadBalancerDNS"  
            - Name: SERVICE_NAME
              Value: !Ref ServiceName

  Service:
    Type: AWS::ECS::Service
    DependsOn: ListenerRule
    Properties:
      ServiceName: !Sub ${ServiceName}-service
      TaskDefinition: !Ref Task
      Cluster: 
        Fn::ImportValue:
          !Sub "${ClusterStackName}-Cluster"  
      LaunchType: FARGATE
      DesiredCount: 2
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 70
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - Fn::ImportValue:
                  !Sub "${VPCStackName}-SubnetPrivate1-Id"   
            - Fn::ImportValue:
                  !Sub "${VPCStackName}-SubnetPrivate2-Id"   
          SecurityGroups:
            - Fn::ImportValue:
                  !Sub "${ClusterStackName}-ContainerSecurityGroup"   
      LoadBalancers:
        - ContainerName: !Sub ${ServiceName}-service
          ContainerPort: 4567
          TargetGroupArn: !Ref TargetGroup

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${ServiceName}-tg
      VpcId: 
        Fn::ImportValue:
          !Sub "${VPCStackName}-Vpc-Id"  
      Port: 80
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /stat
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 10
      TargetType: ip

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn:  
        Fn::ImportValue:
          !Sub "${ClusterStackName}-Listener"   
      Priority: !Ref Priority
      Conditions:
        - Field: path-pattern
          Values:
            - !Sub /${ServiceName}*
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward



